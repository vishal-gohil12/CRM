generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String        @id @default(uuid())
  name         String        @unique
  industry     String
  createdAt    DateTime      @default(now())
  customers    Customer[]
  transactions Transaction[]
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  role      Role     @default(admin)
  createdAt DateTime @default(now())
}

model Customer {
  id               String        @id @default(uuid())
  companyId        String
  email            String        @unique
  phone            String?
  createdAt        DateTime      @default(now())
  remark           String?
  documents        String[]
  gst_no           Int           @default(0)
  company_and_name String
  company          Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  reminder         Reminder[]
  transactions     Transaction[]
}

model Transaction {
  id            String            @id @default(uuid())
  companyId     String
  customerId    String
  status        TransactionStatus @default(pending)
  createdAt     DateTime          @default(now())
  paidAmount    Decimal           @default(0)
  payment_type  String            @default("cash")
  pendingAmount Decimal           @default(0)
  totalAmount   Decimal           @default(0)
  reminders     Reminder[]
  company       Company           @relation(fields: [companyId], references: [id], onDelete: Cascade)
  customer      Customer          @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model Reminder {
  id            String       @id @default(uuid())
  customerId    String
  datetime      DateTime
  message       String
  status        String       @default("PENDING")
  type          String       @default("EMAIL")   
  priority      String       @default("MEDIUM")  
  createdAt     DateTime     @default(now())
  transactionId String?
  customer      Customer     @relation(fields: [customerId], references: [id], onDelete: Cascade)
  transaction   Transaction? @relation(fields: [transactionId], references: [id], onDelete: Cascade)
}

enum Role {
  admin
}

enum TransactionStatus {
  pending
  completed
  cancelled
}
