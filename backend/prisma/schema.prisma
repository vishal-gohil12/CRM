// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String    @id @default(uuid())
  name      String    @unique
  industry  String  
  users     User[]    
  customers Customer[] 
  transactions Transaction[] 
  createdAt DateTime  @default(now())
}

model User {
  id        String   @id @default(uuid())
  company   Company?  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId String
  firstName String
  lastName  String
  email     String   @unique
  password  String   
  role      Role     @default(employee)
  createdAt DateTime @default(now())
}

model Customer {
  id        String   @id @default(uuid())
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId String
  name      String
  email     String   @unique
  phone     String?
  remark   String?
  transactions Transaction[]
  createdAt DateTime @default(now())
}

model Transaction {
  id             String     @id @default(uuid())
  company        Company    @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId      String
  customer       Customer   @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId     String
  amount         Decimal
  status        TransactionStatus @default(pending)
  createdAt      DateTime @default(now())
}

enum Role {
  admin
  manager
  employee
}

enum TransactionStatus {
  pending
  completed
  cancelled
}
